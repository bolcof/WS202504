using UnityEngine;
using UnityEditor;
using System.IO;

public class AutoPrefabExporter : EditorWindow {
    private const string rootObjectName = "RootObject";
    private string exportFolder = "Assets/AutoGeneratedPrefabs"; // デフォルト出力先
    private string packageFileName = "ExportedPackage.unitypackage";

    [MenuItem("Tools/Auto Export Prefab Window")]
    public static void ShowWindow() {
        GetWindow<AutoPrefabExporter>("Auto Prefab Exporter");
    }

    void OnGUI() {
        GUILayout.Label("出力設定", EditorStyles.boldLabel);

        EditorGUILayout.BeginHorizontal();
        EditorGUILayout.LabelField("出力先フォルダ:", GUILayout.Width(100));
        EditorGUILayout.SelectableLabel(exportFolder, GUILayout.Height(16));
        if (GUILayout.Button("フォルダ選択", GUILayout.Width(100))) {
            string selected = EditorUtility.OpenFolderPanel("出力フォルダを選択", Application.dataPath, "");
            if (!string.IsNullOrEmpty(selected)) {
                if (selected.StartsWith(Application.dataPath)) {
                    exportFolder = "Assets" + selected.Substring(Application.dataPath.Length);
                } else {
                    EditorUtility.DisplayDialog("エラー", "Assets フォルダ以下を選択してください。", "OK");
                }
            }
        }
        EditorGUILayout.EndHorizontal();

        packageFileName = EditorGUILayout.TextField("Packageファイル名", packageFileName);

        GUILayout.Space(20);

        if (GUILayout.Button("🚀 Export Prefab & UnityPackage")) {
            Export();
        }
    }

    void Export() {
        GameObject target = GameObject.Find(rootObjectName);
        if (target == null) {
            Debug.LogError($"ヒエラルキーに '{rootObjectName}' という名前のGameObjectが見つかりません。");
            return;
        }

        if (!Directory.Exists(exportFolder)) {
            Directory.CreateDirectory(exportFolder);
        }

        string prefabPath = $"{exportFolder}/{target.name}.prefab";
        PrefabUtility.SaveAsPrefabAssetAndConnect(target, prefabPath, InteractionMode.UserAction);
        PrefabUtility.UnpackPrefabInstance(target, PrefabUnpackMode.Completely, InteractionMode.UserAction);

        string exportPath = Path.Combine(exportFolder, packageFileName);
        AssetDatabase.ExportPackage(exportFolder, exportPath, ExportPackageOptions.Recurse);

        Debug.Log($"PrefabとUnityPackageの出力が完了：\n- Prefab: {prefabPath}\n- Package: {exportPath}");
    }
}
