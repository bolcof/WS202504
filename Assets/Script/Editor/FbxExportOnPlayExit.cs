#if UNITY_EDITOR
using UnityEditor;
using UnityEditor.Formats.Fbx.Exporter;
using UnityEngine;
using System.IO;

[InitializeOnLoad]
public static class FbxExportOnPlayExit {
    private const string rootObjectName = "Human";

    // デフォルト値（起動時にEditorPrefsから読み込まれる）
    public static string exportFolderInAssets = "Assets/AutoGenerated";

    static FbxExportSettings settings;

    static FbxExportOnPlayExit() {
        EditorApplication.playModeStateChanged += OnPlayModeChanged;
        LoadSettings();
    }

    static void LoadSettings() {
        string[] guids = AssetDatabase.FindAssets("t:FbxExportSettings");
        if (guids.Length > 0) {
            string path = AssetDatabase.GUIDToAssetPath(guids[0]);
            settings = AssetDatabase.LoadAssetAtPath<FbxExportSettings>(path);
        } else {
            Debug.LogWarning("FbxExportSettingsアセットが見つかりませんでした。Project内に作成してください。");
        }
    }

    static void OnPlayModeChanged(PlayModeStateChange state) {
        if (state == PlayModeStateChange.EnteredEditMode) {
            if (PlayerPrefs.GetInt("ExportFBXRequest", 0) == 1) {
                PlayerPrefs.SetInt("ExportFBXRequest", 0);
                PlayerPrefs.Save();

                GameObject target = GameObject.Find(rootObjectName);
                if (target != null) {
                    string folder = settings.fbxOutputDirectory;
                    string baseName = Path.GetFileNameWithoutExtension(settings.fbxFileName);

                    string fullPath = Path.Combine(folder, baseName + ".fbx");
                    ModelExporter.ExportObject(fullPath, target);

                    fullPath = Path.Combine(exportFolderInAssets, baseName + ".fbx");
                    ModelExporter.ExportObject(fullPath, target);

                    Debug.Log($"✅ FBX書き出し完了: {fullPath}");
                } else {
                    Debug.LogError("GameObject 'Human' が見つかりませんでした。");
                }
            }
        }
    }

    public static void OnCallCopyModel() {
        string folder = settings.fbxOutputDirectory;
        string sourceModelsPath = Path.Combine(Application.dataPath, "Models");
        string destModelsPath = Path.Combine(folder, "Models");

        if (Directory.Exists(sourceModelsPath)) {
            CopyDirectory(sourceModelsPath, destModelsPath);
            Debug.Log($"📁 Modelsフォルダをコピー完了: {destModelsPath}");
        } else {
            Debug.LogWarning("Assets/Models フォルダが見つかりませんでした。コピーをスキップします。");
        }
    }

    static void CopyDirectory(string sourceDir, string destDir) {
        if (!Directory.Exists(destDir)) {
            Directory.CreateDirectory(destDir);
        }

        foreach (var file in Directory.GetFiles(sourceDir)) {
            string destFile = Path.Combine(destDir, Path.GetFileName(file));
            File.Copy(file, destFile, overwrite: true);
        }

        foreach (var subDir in Directory.GetDirectories(sourceDir)) {
            string destSubDir = Path.Combine(destDir, Path.GetFileName(subDir));
            CopyDirectory(subDir, destSubDir);
        }
    }
}
#endif